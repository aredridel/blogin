// Generated by CoffeeScript 1.4.0
(function() {
  var checkProjectDir, file, getInfoFile, path, util;

  path = require('path');

  util = require('util');

  file = require('./file');

  checkProjectDir = exports.checkProjectDir = function(dirPath) {
    var bloginConfigFile;
    dirPath = path.resolve('./', dirPath || './');
    bloginConfigFile = path.relative(dirPath, './blogin.json');
    if (file.exists(bloginConfigFile)) {
      return true;
    } else {
      util.puts('Error: ' + dirPath + ' was not the project directory, file blogin.json was not found!\n');
      return false;
    }
  };

  getInfoFile = exports.getInfoFile = function(projectDir) {
    var infoFile;
    projectDir = projectDir || './';
    if (!checkProjectDir(projectDir)) {
      return false;
    }
    return infoFile = path.resolve(projectDir, 'data/info');
  };

  exports.addInfo = function(type, filePath, projectDir) {
    var info, infoFile, infos;
    projectDir = projectDir || './';
    infoFile = getInfoFile(projectDir);
    if (!infoFile) {
      return false;
    }
    info = {};
    info.file = path.relative(projectDir, filePath);
    info.ctime = file.getCTime(filePath);
    info.mtime = file.getMTime(filePath);
    infos = file.readJSON(infoFile) || {};
    infos[type] = infos[type] || [];
    infos[type].push(info);
    file.write(infoFile, JSON.stringify(infos, null, 4));
    return true;
  };

  exports.updateInfos = function() {
    var infoFile, infos, pages, posts,
      _this = this;
    infoFile = getInfoFile();
    if (!infoFile) {
      return false;
    }
    infos = {};
    infos.post = [];
    posts = file.dir(fileApi.getSrcFile('post'));
    posts.forEach(function(filePath) {
      var post;
      post = {};
      post.file = path.relative(projectDir, filePath);
      post.ctime = file.getCTime(filePath);
      post.mtime = file.getMTime(filePath);
      return infos.post.push(post);
    });
    infos.page = [];
    pages = file.dir(fileApi.getSrcFile('page'));
    pages.forEach(function(filePath) {
      var page;
      page = {};
      page.file = path.relative(projectDir, filePath);
      page.ctime = file.getCTime(filePath);
      page.mtime = file.getMTime(filePath);
      return infos.page.push(page);
    });
    return file.write(infoFile, JSON.stringify(infos, null, 4));
  };

}).call(this);
